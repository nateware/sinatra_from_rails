##
# Generated by "rake sinatra:from_rails:classic OUTPUT_FILE=/Users/nwiger/Workspace/sinatra_from_rails/spec/output/main_html.rb"
# Keep up to date: http://github.com/nateware/sinatra_from_rails
#

# Categories
get '/categories' do
  @categories = Category.all
  erb :'categories/index'
end

get '/categories/:id' do
  @category = Category.find(params[:id])
  erb :'categories/show'
end

post '/categories/:id/details' do
  @category = Category.view(params[:policy_type], params[:platform],
  session[:region_code] || Setting[:default_region], 
  session[:language_code] || Setting[:default_language], 
  params[:username])
  redirect_back_or_default '/' if @category.is_accepted == true
end       

get '/categories/new' do
  @category = Category.new
  erb :'categories/new'
end

post '/categories' do
  @category = Category.new(params[:category])
  if @category.save
    redirect "/categories/#{@category.to_param}"
  else
    erb :'categories/new'
  end
end

put '/categories/:id' do
  @category = Category.find(params[:id])
  if @category.update_attributes(params[:category])
    redirect "/categories/#{@category.to_param}"
  else
    erb :'categories/edit'
  end
end

delete '/categories/:id' do
  @category = Category.find(params[:id])
  @category.destroy
  redirect '/categories'
end

# Complexes
get '/complexes' do
  @complexes = Complex.all
  erb :'complexes/index'
end

get '/complexes/:id' do
  if params[:username]
    @complex = Complex.find_by_username(params[:username])
  else
    @complex = Complex.find(params[:id])
  end
          @magic = 1

  erb :'complexes/show'
end

get '/complexes/new' do
  @complex = Complex.new
  erb :'complexes/new'
end

post '/complexes' do
  @complex = Complex.new(params[:complex])
  if @complex.save
    redirect "/complexes/#{@complex.to_param}"
  else
    erb :'complexes/new'
  end
end

put '/complexes/:id' do
  @complex = Complex.find(params[:id])
  if @complex.update_attributes(params[:complex])
    @complex.status = 1
    redirect "/complexes/#{@complex.to_param}"
  else
    erb :'complexes/edit'
  end
end

get '/complexes/search' do
  @complex =
  if ! params[:search].nil?
    Complex.search(params)
    elsif ! params[:search_tags].nil?
    Complex.tags_search(params)
  end
  @title = @complex.title
  erb :'complexes/complexity'
end

delete '/complexes/:id' do
  @complex = Complex.find(params[:id])
  @complex.destroy
  redirect '/complexes'
end

# Posts
get '/posts' do
  @posts = Post.all
  erb :'posts/index'
end

get '/posts/:id' do
  @post = Post.find(params[:id])
  erb :'posts/show'
end

get '/posts/new' do
  @post = Post.new
  erb :'posts/new'
end

post '/posts' do
  @post = Post.new(params[:post])
  if @post.save
    redirect "/posts/#{@post.to_param}"
  else
    erb :'posts/new'
  end
end

put '/posts/:id' do
  @post = Post.find(params[:id])
  if @post.update_attributes(params[:post])
    redirect "/posts/#{@post.to_param}"
  else
    erb :'posts/edit'
  end
end

delete '/posts/:id' do
  @post = Post.find(params[:id])
  @post.destroy
  redirect '/posts'
end

# Topic categories
get '/topic_categories' do
  @topic_categories = TopicCategory.all
  erb :'topic_categories/index'
end

get '/topic_categories/:id' do
  @topic_category = TopicCategory.find(params[:id])
  erb :'topic_categories/show'
end

get '/topic_categories/new' do
  @topic_category = TopicCategory.new
  erb :'topic_categories/new'
end

post '/topic_categories' do
  @topic_category = TopicCategory.new(params[:topic_category])
  if @topic_category.save
    redirect "/topic_categories/#{@topic_category.to_param}"
  else
    erb :'topic_categories/new'
  end
end

put '/topic_categories/:id' do
  @topic_category = TopicCategory.find(params[:id])
  if @topic_category.update_attributes(params[:topic_category])
    redirect "/topic_categories/#{@topic_category.to_param}"
  else
    erb :'topic_categories/edit'
  end
end

delete '/topic_categories/:id' do
  @topic_category = TopicCategory.find(params[:id])
  @topic_category.destroy
  redirect '/topic_categories'
end

# Users
get '/users' do
  @users = User.all
  erb :'users/index'
end

get '/users/:id' do
  @user = User.find(params[:id])
  erb :'users/show'
end

get '/users/new' do
  @user = User.new
  erb :'users/new'
end

post '/users' do
  @user = User.new(params[:user])
  if @user.save
    redirect "/users/#{@user.to_param}"
  else
    erb :'users/new'
  end
end

put '/users/:id' do
  @user = User.find(params[:id])
  if @user.update_attributes(params[:user])
    redirect "/users/#{@user.to_param}"
  else
    erb :'users/edit'
  end
end

delete '/users/:id' do
  @user = User.find(params[:id])
  @user.destroy
  redirect '/users'
end
